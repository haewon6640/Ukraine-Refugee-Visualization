/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/data.js":
/*!*********************!*\
  !*** ./src/data.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"refugee_per_week\": () => (/* binding */ refugee_per_week),\n/* harmony export */   \"refugee_percentage\": () => (/* binding */ refugee_percentage),\n/* harmony export */   \"total_refugee_count\": () => (/* binding */ total_refugee_count)\n/* harmony export */ });\nconst total_refugee_count = [1595680, 3132231, 3852914, 4183137, 4577554, 4964567, 5341362, 5634221, 5982586, 6318383, 6678100, 7241315];\nconst refugee_per_week = [{\n  PL: 1027603,\n  HU: 191348,\n  MD: 103254,\n  SK: 140745,\n  RO: 78977,\n  RU: 53300,\n  BY: 453\n}, {\n  PL: 692624,\n  HU: 72540,\n  MD: 233961,\n  SK: 72255,\n  RO: 374455,\n  RU: 89694,\n  BY: 1022\n}, {\n  PL: 393327,\n  HU: 53975,\n  MD: 30698,\n  SK: 40592,\n  RO: 89876,\n  RU: 109382,\n  BY: 2833\n}, {\n  PL: 180279,\n  HU: 36178,\n  MD: 15714,\n  SK: 21847,\n  RO: 52560,\n  RU: 18878,\n  BY: 4767\n}, {\n  PL: 175824,\n  HU: 40687,\n  MD: 12821,\n  SK: 25966,\n  RO: 52542,\n  RU: 79378,\n  BY: 7199\n}, {\n  PL: 176220,\n  HU: 34226,\n  MD: 16926,\n  SK: 18841,\n  RO: 53331,\n  RU: 82451,\n  BY: 5018\n}, {\n  PL: 154836,\n  HU: 36644,\n  MD: 11853,\n  SK: 19434,\n  RO: 48952,\n  RU: 102759,\n  BY: 2317\n}, {\n  PL: 122265,\n  HU: 31316,\n  MD: 10048,\n  SK: 17880,\n  RO: 31905,\n  RU: 78476,\n  BY: 969\n}, {\n  PL: 152262,\n  HU: 37907,\n  MD: 12895,\n  SK: 24464,\n  RO: 53575,\n  RU: 66838,\n  BY: 424\n}, {\n  PL: 158796,\n  HU: 37939,\n  MD: 8896,\n  SK: 22439,\n  RO: 47482,\n  RU: 58262,\n  BY: 1983\n}, {\n  PL: 142956,\n  HU: 37316,\n  MD: 7228,\n  SK: 19564,\n  RO: 41214,\n  RU: 111116,\n  BY: 323\n}, {\n  PL: 250186,\n  HU: 72518,\n  MD: 15219,\n  SK: 37137,\n  RO: 64488,\n  RU: 120883,\n  BY: 2784\n}];\nconst refugee_percentage = [{\n  PL: 0.64399065,\n  HU: 0.119916274,\n  MD: 0.064708463,\n  SK: 0.088203775,\n  RO: 0.04949426,\n  RU: 0.033402687,\n  BY: 0.000283892\n}, {\n  PL: 0.450765383,\n  HU: 0.047209627,\n  MD: 0.152263739,\n  SK: 0.047024147,\n  RO: 0.243698387,\n  RU: 0.058373591,\n  BY: 0.000665126\n}, {\n  PL: 0.545769777,\n  HU: 0.074894232,\n  MD: 0.042595704,\n  SK: 0.056324348,\n  RO: 0.124709477,\n  RU: 0.151775469,\n  BY: 0.003930993\n}, {\n  PL: 0.545931083,\n  HU: 0.10955627,\n  MD: 0.047586025,\n  SK: 0.066158323,\n  RO: 0.15916517,\n  RU: 0.057167429,\n  BY: 0.0144357\n}, {\n  PL: 0.445782002,\n  HU: 0.103157318,\n  MD: 0.032506205,\n  SK: 0.065833876,\n  RO: 0.133214339,\n  RU: 0.201254003,\n  BY: 0.018252256\n}, {\n  PL: 0.455333542,\n  HU: 0.088436306,\n  MD: 0.043734965,\n  SK: 0.048683119,\n  RO: 0.137801573,\n  RU: 0.213044523,\n  BY: 0.012965973\n}, {\n  PL: 0.41092902,\n  HU: 0.097251821,\n  MD: 0.031457424,\n  SK: 0.051577118,\n  RO: 0.129916798,\n  RU: 0.272718587,\n  BY: 0.006149232\n}, {\n  PL: 0.417487596,\n  HU: 0.106932005,\n  MD: 0.034310026,\n  SK: 0.061053271,\n  RO: 0.108943212,\n  RU: 0.26796513,\n  BY: 0.00330876\n}, {\n  PL: 0.437076055,\n  HU: 0.108814031,\n  MD: 0.037015774,\n  SK: 0.070225195,\n  RO: 0.153789847,\n  RU: 0.191861984,\n  BY: 0.001217114\n}, {\n  PL: 0.472892849,\n  HU: 0.11298195,\n  MD: 0.026492196,\n  SK: 0.06682311,\n  RO: 0.141400906,\n  RU: 0.173503635,\n  BY: 0.005905354\n}, {\n  PL: 0.39741241,\n  HU: 0.103737104,\n  MD: 0.020093574,\n  SK: 0.054387199,\n  RO: 0.114573401,\n  RU: 0.308898384,\n  BY: 0.000897928\n}, {\n  PL: 0.44421047,\n  HU: 0.128757224,\n  MD: 0.027021652,\n  SK: 0.065937519,\n  RO: 0.114499791,\n  RU: 0.214630292,\n  BY: 0.00494305\n}];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/data.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data */ \"./src/data.js\");\nlet mapRoot = null;\nvar mapHeat = null;\n\nconst loadChart = () => {\n  am5.ready(function () {\n    // Create root\n    var root = am5.Root.new(\"chartdiv\"); // Set themes\n\n    mapRoot = root;\n    root.setThemes([am5themes_Animated.new(root)]); // Create chart\n\n    var chart = root.container.children.push(am5map.MapChart.new(root, {\n      panX: \"translateX\",\n      panY: \"translateY\",\n      layout: root.horizontalLayout\n    })); // Create polygon series\n\n    var polygonSeries = chart.series.push(am5map.MapPolygonSeries.new(root, {\n      geoJSON: am5geodata_region_world_europeHigh,\n      valueField: \"value\",\n      calculateAggregates: true\n    }));\n    polygonSeries.mapPolygons.template.setAll({\n      tooltipText: \"{name} \\n Total Refugee: {value} \\n Percent Refugees: {percent}\"\n    });\n    polygonSeries.set(\"heatRules\", [{\n      target: polygonSeries.mapPolygons.template,\n      dataField: \"value\",\n      min: am5.color(0xff621f),\n      max: am5.color(0x661f00),\n      key: \"fill\"\n    }]);\n    polygonSeries.mapPolygons.template.events.on(\"pointerover\", function (ev) {\n      if (!Boolean(ev.target.dataItem.get(\"value\"))) {\n        ev.target._settings.tooltipText = \"\";\n      }\n\n      heatLegend.showValue(ev.target.dataItem.get(\"value\"));\n    });\n    polygonSeries.data.setAll(data);\n    var heatLegend = chart.children.push(am5.HeatLegend.new(root, {\n      orientation: \"vertical\",\n      startColor: am5.color(0xff621f),\n      endColor: am5.color(0x661f00),\n      startText: \"Lowest\",\n      endText: \"Highest\",\n      stepCount: 5\n    }));\n    heatLegend.startLabel.setAll({\n      fontSize: 12,\n      fill: heatLegend.get(\"startColor\")\n    });\n    heatLegend.endLabel.setAll({\n      fontSize: 12,\n      fill: heatLegend.get(\"endColor\")\n    }); // change this to template when possible\n\n    polygonSeries.events.on(\"datavalidated\", function () {\n      heatLegend.set(\"startValue\", polygonSeries.getPrivate(\"valueLow\"));\n      heatLegend.set(\"endValue\", polygonSeries.getPrivate(\"valueHigh\"));\n    });\n    mapHeat = heatLegend;\n  }); // end am5.ready()\n};\n\n\nvar total = document.getElementById('total-count');\nvar slider = document.getElementById(\"myRange\");\nvar date = document.getElementById(\"date\");\nvar dates = [\"3/1/2022 - 3/7/2022\", \"3/8/2022 - 3/14/2022\", \"3/15/2022 - 3/21/2022\", \"3/22/2022 - 3/28/2022\", \"3/29/2022 - 4/4/2022\", \"4/5/2022 - 4/11/2022\", \"4/12/2022 - 4/18/2022\", \"4/19/2022 - 4/25/2022\", \"4/26/2022 - 5/2/2022\", \"5/3/2022 - 5/9/2022\", \"5/10/2022 - 5/16/2022\", \"5/24/2022 - 5/30/2022\"];\ndate.innerHTML = dates[slider.value];\ntotal.innerHTML = `Total Number of Migrant Refugees: ${_data__WEBPACK_IMPORTED_MODULE_0__.total_refugee_count[slider.value].toLocaleString(\"en-US\")}`;\nlet country_names = Object.keys(_data__WEBPACK_IMPORTED_MODULE_0__.refugee_per_week[0]);\nvar data = [];\n\nfor (var i = 0; i < country_names.length; i++) {\n  // console.log(rpw[0])\n  // console.log({id: country_names[i], value: rpw[0][country_names[i]], percent: rp[0][country_names[i]]})\n  data.push({\n    id: country_names[i],\n    value: _data__WEBPACK_IMPORTED_MODULE_0__.refugee_per_week[0][country_names[i]],\n    percent: `${(Math.round(_data__WEBPACK_IMPORTED_MODULE_0__.refugee_percentage[0][country_names[i]] * 10000) / 100).toFixed(2)}%`\n  });\n}\n\nloadChart(data); // Based on Slider\n\nslider.oninput = function () {\n  date.innerHTML = dates[this.value];\n  total.innerHTML = `Total Number of Migrant Refugees: ${_data__WEBPACK_IMPORTED_MODULE_0__.total_refugee_count[slider.value].toLocaleString(\"en-US\")}`;\n  let country_names = Object.keys(_data__WEBPACK_IMPORTED_MODULE_0__.refugee_per_week[this.value]);\n  var data = [];\n\n  for (var i = 0; i < country_names.length; i++) {\n    // console.log(rpw[0])\n    // console.log({id: country_names[i], value: rpw[0][country_names[i]], percent: rp[0][country_names[i]]})\n    data.push({\n      id: country_names[i],\n      value: _data__WEBPACK_IMPORTED_MODULE_0__.refugee_per_week[this.value][country_names[i]],\n      percent: `${(Math.round(_data__WEBPACK_IMPORTED_MODULE_0__.refugee_percentage[this.value][country_names[i]] * 10000) / 100).toFixed(2)}%`\n    });\n  }\n\n  let root = mapRoot;\n  root.setThemes([am5themes_Animated.new(root)]); // Create chart\n\n  root.container.children.pop();\n  var chart = root.container.children.push(am5map.MapChart.new(root, {\n    panX: \"translateX\",\n    panY: \"translateY\",\n    layout: root.horizontalLayout\n  })); // Create polygon series\n  // console.log(am5geodata_region_world_europeHigh)\n\n  var polygonSeries = chart.series.push(am5map.MapPolygonSeries.new(root, {\n    geoJSON: am5geodata_region_world_europeHigh,\n    valueField: \"value\",\n    calculateAggregates: true\n  }));\n  polygonSeries.mapPolygons.template.setAll({\n    tooltipText: \"{name} \\n Total Refugee: {value} \\n Percent Refugees: {percent}\"\n  });\n  polygonSeries.set(\"heatRules\", [{\n    target: polygonSeries.mapPolygons.template,\n    dataField: \"value\",\n    min: am5.color(0xff621f),\n    max: am5.color(0x661f00),\n    key: \"fill\"\n  }]);\n  polygonSeries.mapPolygons.template.events.on(\"pointerover\", function (ev) {\n    mapHeat.hideTooltip();\n    mapHeat = heatLegend;\n    heatLegend.showValue(ev.target.dataItem.get(\"value\"));\n  });\n  polygonSeries.data.setAll(data);\n  var heatLegend = chart.children.push(am5.HeatLegend.new(root, {\n    orientation: \"vertical\",\n    startColor: am5.color(0xff621f),\n    endColor: am5.color(0x661f00),\n    startText: \"Lowest\",\n    endText: \"Highest\",\n    stepCount: 5\n  }));\n  heatLegend.startLabel.setAll({\n    fontSize: 12,\n    fill: heatLegend.get(\"startColor\")\n  });\n  heatLegend.endLabel.setAll({\n    fontSize: 12,\n    fill: heatLegend.get(\"endColor\")\n  }); // change this to template when possible\n\n  polygonSeries.events.on(\"datavalidated\", function () {\n    heatLegend.set(\"startValue\", polygonSeries.getPrivate(\"valueLow\"));\n    heatLegend.set(\"endValue\", polygonSeries.getPrivate(\"valueHigh\"));\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;